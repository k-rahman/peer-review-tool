// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Submission.Service.API.Persistence.Contexts;

namespace Submission.Service.API.Migrations
{
        [DbContext(typeof(SubmissionContext))]
        [Migration("20210523134721_RenameStudentIdToAuthorIdInWorkTable")]
        partial class RenameStudentIdToAuthorIdInWorkTable
        {
                protected override void BuildTargetModel(ModelBuilder modelBuilder)
                {
#pragma warning disable 612, 618
                        modelBuilder
                            .HasAnnotation("Relational:MaxIdentifierLength", 63)
                            .HasAnnotation("ProductVersion", "5.0.6")
                            .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                        modelBuilder.Entity("Submission.Service.API.Domain.Models.Submission", b =>
                            {
                                    b.Property<int>("Id")
                            .ValueGeneratedOnAdd()
                            .HasColumnType("integer")
                            .HasColumnName("id")
                            .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                                    b.Property<int>("AuthorId")
                            .HasColumnType("integer")
                            .HasColumnName("author_id");

                                    b.Property<string>("Content")
                            .HasColumnType("text")
                            .HasColumnName("content");

                                    b.Property<DateTimeOffset?>("Modified")
                            .HasColumnType("timestamp with time zone")
                            .HasColumnName("modified");

                                    b.Property<DateTimeOffset?>("Submitted")
                            .HasColumnType("timestamp with time zone")
                            .HasColumnName("submitted");

                                    b.Property<int>("WorksDeadlineId")
                            .HasColumnType("integer")
                            .HasColumnName("works_deadline_id");

                                    b.HasKey("Id");

                                    b.HasIndex("WorksDeadlineId");

                                    b.ToTable("works");
                            });

                        modelBuilder.Entity("Submission.Service.API.Domain.Models.WorksDeadline", b =>
                            {
                                    b.Property<int>("Id")
                            .ValueGeneratedOnAdd()
                            .HasColumnType("integer")
                            .HasColumnName("id")
                            .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                                    b.Property<Guid>("Link")
                            .HasColumnType("uuid")
                            .HasColumnName("link");

                                    b.Property<DateTimeOffset>("SubmissionEnd")
                            .HasColumnType("timestamp with time zone")
                            .HasColumnName("submission_end");

                                    b.Property<DateTimeOffset>("Workstart")
                            .HasColumnType("timestamp with time zone")
                            .HasColumnName("submission_start");

                                    b.HasKey("Id");

                                    b.ToTable("works_deadlines");
                            });

                        modelBuilder.Entity("Submission.Service.API.Domain.Models.Submission", b =>
                            {
                                    b.HasOne("Submission.Service.API.Domain.Models.WorksDeadline", "WorksDeadline")
                            .WithMany("Works")
                            .HasForeignKey("WorksDeadlineId")
                            .OnDelete(DeleteBehavior.Cascade)
                            .IsRequired();

                                    b.Navigation("WorksDeadline");
                            });

                        modelBuilder.Entity("Submission.Service.API.Domain.Models.WorksDeadline", b =>
                            {
                                    b.Navigation("Works");
                            });
#pragma warning restore 612, 618
                }
        }
}
